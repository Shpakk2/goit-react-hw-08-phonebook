{"version":3,"file":"static/js/322.92213654.chunk.js","mappings":"gOACA,EAAuB,0BAAvB,EAAyD,2BAAzD,EAA0F,yB,SCK7EA,EAAc,WACvB,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KAEMC,GAAWC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMF,SAASG,KAAnB,IAC5BC,GAAWC,EAAAA,EAAAA,MAgBXC,EAAgB,SAAAC,GAClB,MAAwBA,EAAEC,cAAlBZ,EAAR,EAAQA,KAAMa,EAAd,EAAcA,MACd,OAAQb,GACJ,IAAK,OACDC,EAAQY,GACR,MACJ,IAAK,SACDV,EAAUU,GACV,MACJ,QACI,OAEX,EAED,OACI,kBAAMC,UAAWC,EAAUC,SA7BV,SAAAL,GACjBA,EAAEM,iBACmBb,EAASc,MAAK,SAAAC,GAAO,OAAIA,EAAQnB,KAAKoB,sBAAwBpB,EAAKoB,mBAA9C,IAGrCC,MAAM,GAAD,OAAIrB,EAAJ,6BAENQ,GAASc,EAAAA,EAAAA,IAAW,CAACtB,KAAAA,EAAME,OAAAA,KAC3BD,EAAQ,IACRE,EAAU,IAGjB,EAiBG,WACI,4CACQ,kBACAoB,SAAUb,EACVG,MAAOb,EACPwB,KAAK,OACLV,UAAWC,EACXf,KAAM,OACNyB,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,QAGhB,8CACQ,kBAAOb,UAAWC,EAClBQ,SAAUb,EACVG,MAAOX,EACPsB,KAAK,MACLxB,KAAK,SACLyB,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,QAGhB,mBAAQb,UAAWC,EAASS,KAAK,SAAjC,2BAGX,ECpED,EAA0B,wB,UCGbI,EAAS,WACpB,IAAMpB,GAAWC,EAAAA,EAAAA,MACXoB,GAASxB,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMuB,MAAV,IAEhC,OACI,iBAAKf,UAAWC,EAAhB,WACI,sDACA,kBAAOS,KAAK,OAAOxB,KAAK,SAASa,MAAOgB,EAAQN,SAAU,SAAAZ,GAAC,OAAIH,GAASsB,EAAAA,EAAAA,GAAcnB,EAAEoB,OAAOlB,OAApC,MAGpE,ECbD,EAAuB,0BAAvB,EAAuD,yBCI1CmB,EAAc,WACzB,IAAMxB,GAAWC,EAAAA,EAAAA,OAEjBwB,EAAAA,EAAAA,YACE,WAAMzB,GAAS0B,EAAAA,EAAAA,MAAiB,GAAE,CAAC1B,IAGnC,IAAM2B,GAAY9B,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMF,SAAS+B,SAAnB,IAE/B/B,GAAWC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMF,SAASG,KAAnB,IAC5B6B,GAAc/B,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMuB,MAAV,IAG/BQ,EAAmBjC,EAASyB,QAAO,SAAAV,GAAO,OAC9CA,EAAQnB,KAAKoB,oBAAoBkB,SAASF,EAAYhB,oBADR,IAIhD,OACEe,GAAY,wCACR,wBACKE,EAAiBE,KAAI,SAAApB,GAC1B,OACI,gBAAqBL,UAAWC,EAAhC,eAA2C,yBAAII,EAAQnB,KAAZ,KAAoBmB,EAAQjB,UAAvE,KAAmF,mBAAQY,UAAWC,EAASyB,QAAS,kBAAMhC,GAASiC,EAAAA,EAAAA,IAActB,EAAQuB,IAArC,EAArC,oBAAnF,MAASvB,EAAQuB,GAEtB,KAGN,EC/BD,EAA4B,4BCgB5B,EAZiB,WACf,OACI,iBAAK5B,UAAWC,EAAhB,WACA,uCACA,SAACjB,EAAD,KACA,sCACA,SAAC8B,EAAD,KACA,SAACI,EAAD,MAGL,C","sources":["webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/pages/Contacts/Contacts.module.css?fb9d","pages/Contacts/Contacts.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"input\":\"ContactForm_input__Bl93P\",\"btn\":\"ContactForm_btn__wll+u\"};","import { useState } from \"react\"\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from \"redux/operations\";\nimport css from 'components/ContactForm/ContactForm.module.css'\n\n\nexport const ContactForm = () => {\n    const [name, setName] = useState('')\n    const [number, setNumber] = useState('')\n\n    const contacts = useSelector(state => state.contacts.items)\n    const dispatch = useDispatch()\n\n    const handleSubmit = e => {\n        e.preventDefault()\n        const includesName = contacts.find(contact => contact.name.toLocaleLowerCase() === name.toLocaleLowerCase())\n\n        if (includesName) {\n             alert(`${name} is already in contacts`)\n        } else {\n            dispatch(addContact({name, number}))\n            setName(\"\")\n            setNumber(\"\")\n        }\n\n    }\n  \n    const onInputChange = e => {\n        const { name, value } = e.currentTarget;\n        switch (name) {\n            case \"name\":\n                setName(value)\n                break;\n            case \"number\":\n                setNumber(value)\n                break;\n            default:\n                return;\n         }\n    }\n\n    return (\n        <form className={css.form} onSubmit={handleSubmit}>\n            <label >Insert Name\n                    <input\n                    onChange={onInputChange}\n                    value={name}\n                    type=\"text\"\n                    className={css.input}\n                    name={\"name\"}\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                    title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                    required\n                    />\n            </label>\n            <label>Insert Number\n                    <input className={css.input}\n                    onChange={onInputChange}\n                    value={number}\n                    type=\"tel\"\n                    name=\"number\"\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                    title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                    required\n                    />\n            </label>\n            <button className={css.btn} type=\"submit\">Add contact</button>\n        </form>\n        )\n}\n\n\n// export class ContactForm extends React.Component {\n\n//     state = {\n//     name: '',\n//     number: '',\n//     };\n\n//     handleSubmit = e => {\n//         e.preventDefault();\n//         this.props.onAddBtnClick(this.state)\n//         e.target.reset()\n//     };\n\n//     onInputChange = e => {\n//         const { name, value } = e.currentTarget;\n//         this.setState({ [name]: value });\n//     };\n\n//     render() {\n//         return (\n//         <form className={css.form} onSubmit={this.handleSubmit}>\n//             <label >Insert Name\n//                     <input\n//                     onChange={this.onInputChange}\n//                     value={this.state.name}\n//                     type=\"text\"\n//                     className={css.input}\n//                     name={\"name\"}\n//                     pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n//                     title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n//                     required\n//                     />\n//             </label>\n//             <label>Insert Number\n//                     <input className={css.input}\n//                     onChange={this.onInputChange}\n//                     value={this.state.number}\n//                     type=\"tel\"\n//                     name=\"number\"\n//                     pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n//                     title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n//                     required\n//                     />\n//             </label>\n//             <button className={css.btn} type=\"submit\">Add contact</button>\n//         </form>\n//         )\n//     }\n// }","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"Filter_wrapper__9Ksqy\"};","import { useSelector, useDispatch } from 'react-redux';\nimport css from 'components/Filter/Filter.module.css'\nimport { filterContact } from '../../redux/filterSlice';\n\nexport const Filter = () => {\n  const dispatch = useDispatch()\n  const filter = useSelector(state => state.filter)\n\n  return (\n      <div className={css.wrapper}>\n          <label>Find contacts by name</label>\n          <input type=\"text\" name=\"filter\" value={filter} onChange={e => dispatch(filterContact(e.target.value))}/>\n      </div>\n    )\n}","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"ContactList_item__EZYHO\",\"btn\":\"ContactList_btn__6Piat\"};","import css from 'components/ContactList/ContactList.module.css'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useEffect } from \"react\";\nimport { fetchContacts, deleteContact } from 'redux/operations'\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n\n  useEffect(\n    () =>{dispatch(fetchContacts())}, [dispatch]\n  )\n\n    const isLoading = useSelector(state => state.contacts.isLoading )\n\n  const contacts = useSelector(state => state.contacts.items)\n  const filterQuery = useSelector(state => state.filter);\n\n\n  const filteredContacts = contacts.filter(contact =>\n    contact.name.toLocaleLowerCase().includes(filterQuery.toLocaleLowerCase())\n  );\n\n  return (\n    isLoading ? <div>isLoading</div> :\n        <ul>\n            {filteredContacts.map(contact => {\n        return (\n            <li key={contact.id} className={css.item}> <p>{contact.name}: {contact.number}</p> <button className={css.btn} onClick={() => dispatch(deleteContact(contact.id))}>Delete</button> </li>\n        )\n      })}\n        </ul>\n  )\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Contacts_container__WzsIr\"};","import { ContactForm } from 'components/ContactForm/ContactForm';\nimport { Filter } from 'components/Filter/Filter';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport css from \"pages/Contacts/Contacts.module.css\"\n \nconst Contacts = () => {\n  return (\n      <div className={css.container}>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div> \n)\n}\n\nexport default Contacts"],"names":["ContactForm","useState","name","setName","number","setNumber","contacts","useSelector","state","items","dispatch","useDispatch","onInputChange","e","currentTarget","value","className","css","onSubmit","preventDefault","find","contact","toLocaleLowerCase","alert","addContact","onChange","type","pattern","title","required","Filter","filter","filterContact","target","ContactList","useEffect","fetchContacts","isLoading","filterQuery","filteredContacts","includes","map","onClick","deleteContact","id"],"sourceRoot":""}